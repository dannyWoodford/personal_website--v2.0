/*
auto-generated by: https://github.com/react-spring/gltfjsx
author: engine9 (https://sketchfab.com/engine9)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/rhetorician-a89f035291d843069d73988cc0e25399
title: Rhetorician
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useLoader, useFrame, useResource, useThree } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { draco } from 'drei'

export default function Statue(...props) {
  const [ref] = useResource()
  const { gl, scene } = useThree()
  useFrame(() => ref.current.update(gl, scene))

  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '3d/statue/scene.gltf', draco('/draco-gltf/'))

  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      'Take 01': mixer.clipAction(animations[0], group.current),
    }
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [animations, mixer])
// console.log(animations)

  return (
    <group ref={group} {...props} dispose={null} position={[2,-3,-3]}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[-0.27, 0.12, 1.33]}>
        <cubeCamera args={[0.1, 50, 512]} ref={ref} position={[2,-3,-3]} />
      {ref.current && (
        <mesh  receiveShadow castShadow geometry={nodes.mentor_roman_retopo_0.geometry} onClick={(e) => actions.current['Take 01'].play()} >
            <meshPhysicalMaterial
              attach="material"
              color="#b76e79"
              emissive="#000000"
              roughness="0.4"
              metalness="0.4"
              reflectivity="3"
              clearcoat="1"
              side={THREE.DoubleSide}
              envMap={ref.current.renderTarget.texture}
            />
          </mesh>
        )}
        </group>
        <group position={[0.16, -0.17, 4.81]} rotation={[-0.1, 0.1, 0]} scale={[0.89, 0.89, 0.89]}>
          <mesh material={materials.Crown} geometry={nodes.nimbus002_0.geometry} />
          <mesh material={materials.Crown} geometry={nodes.nimbus001_0.geometry} />
          <mesh material={materials.Crown} geometry={nodes.nimbus003_0.geometry} />
        </group>
      </group>
    </group>
  )
}
